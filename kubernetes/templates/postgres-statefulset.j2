apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: {{ namespace }}
  labels:
    app: postgres
    environment: {{ environment }}
type: Opaque
data:
  username: {{ postgres.username | b64encode }}
  password: {{ postgres.password | b64encode }}
  database: {{ postgres.database | b64encode }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: {{ namespace }}
  labels:
    app: postgres
    environment: {{ environment }}
data:
  POSTGRES_DB: {{ postgres.database }}
  POSTGRES_USER: {{ postgres.username }}
  PGDATA: /var/lib/postgresql/data/pgdata
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: {{ namespace }}
  labels:
    app: postgres
    environment: {{ environment }}
spec:
  type: {{ postgres.service_type }}
  selector:
    app: postgres
    environment: {{ environment }}
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    {% if postgres.service_type == "NodePort" %}
    nodePort: {{ postgres.node_port }}
    {% endif %}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: {{ namespace }}
  labels:
    app: postgres
    environment: {{ environment }}
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      environment: {{ environment }}
  template:
    metadata:
      labels:
        app: postgres
        environment: {{ environment }}
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: {{ postgres.resources.requests.memory }}
            cpu: {{ postgres.resources.requests.cpu }}
          limits:
            memory: {{ postgres.resources.limits.memory }}
            cpu: {{ postgres.resources.limits.cpu }}
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ postgres.username }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ postgres.username }}
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
      labels:
        app: postgres
        environment: {{ environment }}
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ postgres.storage_class }}
      resources:
        requests:
          storage: {{ postgres.storage_size }}